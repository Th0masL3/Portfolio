@startuml
interface ConsoleService {
    +addConsole(requestModel: ConsoleRequestModel): ConsoleResponseModel
}

class ConsoleServiceImpl {
    +addConsole(requestModel: ConsoleRequestModel): ConsoleResponseModel
    -consoleRepository: ConsoleRepository
    -consoleResponseMapper: ConsoleResponseMapper
}

class ConsoleRepository {
    +save(entity: Console): Console
}

class ConsoleController {
    +addConsole(requestModel: ConsoleRequestModel): ResponseEntity<ConsoleResponseModel>
}

class Console {
    -consoleId: String
    -consoleName: String
    -releaseDate: LocalDate
    -price: Double
    -quantityInStock: int
    -company: String
}

class ConsoleRequestModel {
    +consoleName: String
    +releaseDate: LocalDate
    +price: double
    +quantityInStock: int
    +company: String
}

class ConsoleResponseModel {
    +consoleId: String
    +consoleName: String
    +releaseDate: LocalDate
    +price: double
    +quantityInStock: int
    +company: String
}

class ConsoleResponseMapper {
    +entityToResponseModel(console: Console): ConsoleResponseModel
}

class ConsoleRequestMapper {
    +requestModelToEntity(requestModel: ConsoleRequestModel): Console
}

ConsoleController --> ConsoleService : calls
ConsoleService <|.. ConsoleServiceImpl : implements
ConsoleServiceImpl --> ConsoleRepository : calls
ConsoleServiceImpl --> ConsoleResponseMapper : maps to response
ConsoleServiceImpl --> ConsoleRequestMapper : maps to entity
ConsoleRepository --> Console : operates on
@enduml
