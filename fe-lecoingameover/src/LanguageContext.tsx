import React, { createContext, useState, useContext, ReactNode } from "react";

export interface TranslationKeys {
    portfolioTitle: string;
    home: string;
    about: string;
    projects: string;
    comments: string;
    adminComments: string;
    hello: string;
    logout: string;
    login: string;
    aboutTitle: string;
    aboutDescription: string;
    skills: string;
    hobbies: string;
    perseverance: string;
    respect: string;
    collaboration: string;
    java: string;
    csharp: string;
    htmlcss: string;
    jsreact: string;
    sql: string;
    git: string;
    projectManagement: string;
    gaming: string;
    workout: string;
    volleyball: string;
    iceSkating: string;
    jogging: string;
    cvPrompt: string;
    downloadCV: string;
    welcomeTitle: string;
    welcomeMessage: string;
    projectsShowcase: string;
    skillsSection: string;
    hobbiesSection: string;
    commentsSection: string;
    cvNote: string;
    loginTitle: string;
    usernameLabel: string;
    usernamePlaceholder: string;
    passwordLabel: string;
    passwordPlaceholder: string;
    loginButton: string;
    loginError: string;
    projectsTitle: string;
    project1Title: string;
    project1Description: string;
    project2Title: string;
    project2Description: string;
    project3Title: string;
    project3Description: string;
    project4Title: string;
    project4Description: string;
    githubLink: string;
    publicCommentsTitle: string;
    nameColumn: string;
    messageColumn: string;
    timestampColumn: string;
    addCommentTitle: string;
    commentPlaceholder: string;
    submitButton: string;
    loginRequired: string;
    commentUnderReview: string;
    manageCommentsTitle: string;
    actionsColumn: string;
    approveButton: string;
    deleteButton: string;
    confirmDelete: string;
    deleteSuccess: string;
    deleteError: string;
    approveSuccess: string;
    approveError: string;
    redirectError: string;
    footerTitle: string;
    footerDescription: string;
    contact: string;
    allRightsReserved: string;
    languageSwitch: string;
    enterNameAndMessage: string;
}


export const translations: Record<"en" | "fr", TranslationKeys> = {
    en: {
        portfolioTitle: "My Portfolio",
        home: "Home",
        about: "About Me",
        projects: "Projects",
        comments: "Comments",
        adminComments: "Admin Comments",
        hello: "Hello",
        logout: "Logout",
        login: "Login",
        aboutTitle: "About Me",
        aboutDescription: "My name is Thomas Lemay, I‚Äôm a third-year student at Champlain College in Computer Science. I‚Äôm a perseverant and hard-working student who likes to pursue his goals with determination. Ever since I was a child, the technological world was something that I was really passionate about. This passion has followed me since my youth which is why I chose to get a career in this industry. I‚Äôm autonomous and have good front-end and back-end coding experiences. I coded microservice based applications in Java  and I used docker in multiple school projects. These projects allowed me to sharpen my team working skills and made me realize that I love to work and collaborate in a team.\n",
        skills: "Skills",
        hobbies: "Hobbies",
        perseverance: "Persevering",
        respect: "Respectful",
        collaboration: "Collaboration",
        java: "Java",
        csharp: "C#",
        htmlcss: "HTML/CSS",
        jsreact: "JavaScript/React",
        sql: "SQL (MySQL, MongoDB, Oracle, MicrosoftSQL)",
        git: "Git/GitHub",
        projectManagement: "Project Management",
        gaming: "Gaming",
        workout: "Working Out",
        volleyball: "Volleyball",
        iceSkating: "Ice Skating",
        jogging: "Jogging",
        cvPrompt: "If you want to know more about me, you can download my CV:",
        downloadCV: "Download CV",
        welcomeTitle: "Welcome to My Portfolio",
        welcomeMessage: "I‚Äôm Thomas Lemay, a passionate Computer Science student at Champlain College Saint-Lambert.",
        projectsShowcase: "üîπ Projects: A showcase of my programming work.",
        skillsSection: "üîπ Skills: My expertise as a programmer.",
        hobbiesSection: "üîπ Hobbies: What I do when I'm not coding.",
        commentsSection: "üîπ Comments: Feel free to leave comments to let me know what you think!",
        cvNote: "Note: You can access my CV in the About Me page.",
        loginTitle: "Login",
        usernameLabel: "Username",
        usernamePlaceholder: "Enter your username",
        passwordLabel: "Password",
        passwordPlaceholder: "Enter your password",
        loginButton: "Login",
        loginError: "Invalid username or password",
        projectsTitle: "Projects",
        project1Title: "Le Coin Game Over",
        project1Description: "A website for a local game store featuring authentication, payment processing, and product browsing, built with Java and React.",
        project2Title: "Champlain Pet Clinic",
        project2Description: "A multi-service microservices-based application built using Spring Boot, Scrum, version control, and CI/CD.",
        project3Title: "Pirate Ship Defense - Unity",
        project3Description: "A pirate-themed tower defense game inspired by Bloons TD, developed in Unity using C#.",
        project4Title: "Resume Builder",
        project4Description: "A .NET application that allows users to build and customize resumes, developed in C#.",
        githubLink: "View on GitHub",
        publicCommentsTitle: "Public Comments",
        nameColumn: "Name",
        messageColumn: "Message",
        timestampColumn: "Timestamp",
        addCommentTitle: "Add a Comment",
        commentPlaceholder: "Write your comment here...",
        submitButton: "Submit",
        loginRequired: "You must be logged in to submit a comment.",
        commentUnderReview: "Your comment is under review by the admin and will be published soon.",
        manageCommentsTitle: "Manage Comments",
        actionsColumn: "Actions",
        approveButton: "Approve",
        deleteButton: "Delete",
        confirmDelete: "Are you sure you want to delete this comment?",
        deleteSuccess: "‚úÖ Comment deleted successfully.",
        deleteError: "‚ùå Failed to delete comment.",
        approveSuccess: "‚úÖ Comment approved successfully.",
        approveError: "‚ùå Failed to approve comment.",
        redirectError: "Unauthorized. Redirecting to homepage...",
        footerTitle: "Thomas Lemay",
        footerDescription: "Computer Science Student at Champlain College Saint-Lambert",
        contact: "Contact",
        allRightsReserved: "¬© {year} Thomas Lemay. All rights reserved.",
        languageSwitch: "Switch Language",
        enterNameAndMessage: "Please enter both your name and message!"
    },
    fr: {
        portfolioTitle: "Mon Portfolio",
        home: "Accueil",
        about: "√Ä propos de moi",
        projects: "Projets",
        comments: "Commentaires",
        adminComments: "Commentaires Admin",
        hello: "Bonjour",
        logout: "Se d√©connecter",
        login: "Se connecter",
        aboutTitle: "√Ä propos de moi",
        aboutDescription: "Mon nom est Thomas Lemay, je suis √©tudiant de troisi√®me ann√©e au Coll√®ge Champlain en informatique. Je suis un √©tudiant pers√©v√©rant et travailleur qui aime poursuivre ses objectifs avec d√©termination. Depuis mon enfance, le monde technologique m‚Äôa toujours passionn√©.   et c‚Äôest pourquoi j‚Äôai choisi de faire carri√®re dans cette industrie. Je suis autonome et j‚Äôai de bonnes exp√©riences en programmation front-end et back-end. J‚Äôai coder des applications bas√©es sur une architecture de microservices en Java et j‚Äôai utilis√© Docker et Spring Boot dans plusieurs projets scolaires. Ces projets m‚Äôont permis d‚Äôaffiner mes comp√©tences en travail d‚Äô√©quipe et m‚Äôont fait r√©aliser que j‚Äôadore travailler et collaborer avec les autres.",
        skills: "Comp√©tences",
        hobbies: "Passions",
        perseverance: "Pers√©v√©rant",
        respect: "Respectueux",
        collaboration: "Collaboration",
        java: "Java",
        csharp: "C#",
        htmlcss: "HTML/CSS",
        jsreact: "JavaScript/React",
        sql: "SQL (MySQL, MongoDB, Oracle, MicrosoftSQL)",
        git: "Git/GitHub",
        projectManagement: "Gestion de projet",
        gaming: "Jeux vid√©o",
        workout: "Musculation",
        volleyball: "Volleyball",
        iceSkating: "Patinage sur glace",
        jogging: "Jogging",
        cvPrompt: "Si vous voulez en savoir plus sur moi, vous pouvez t√©l√©charger mon CV :",
        downloadCV: "T√©l√©charger le CV",
        welcomeTitle: "Bienvenue sur Mon Portfolio",
        welcomeMessage: "Je suis Thomas Lemay, un √©tudiant passionn√© en informatique au Coll√®ge Champlain Saint-Lambert.",
        projectsShowcase: "üîπ Projets : Mes diff√©rents projets de programmation.",
        skillsSection: "üîπ Comp√©tences : Mon expertise en tant que programmeur.",
        hobbiesSection: "üîπ Passions : Ce que je fais quand je ne code pas.",
        commentsSection: "üîπ Commentaires : N'h√©sitez pas √† me laisser un commentaire !",
        cvNote: "Remarque : Vous pouvez acc√©der √† mon CV sur la page √Ä propos de moi.",
        loginTitle: "Connexion",
        usernameLabel: "Nom d'utilisateur",
        usernamePlaceholder: "Entrez votre nom d'utilisateur",
        passwordLabel: "Mot de passe",
        passwordPlaceholder: "Entrez votre mot de passe",
        loginButton: "Se connecter",
        loginError: "Nom d'utilisateur ou mot de passe invalide",
        projectsTitle: "Projets",
        project1Title: "Le Coin Game Over",
        project1Description: "Un site Web pour une boutique de jeux locale avec authentification, paiement en ligne et navigation produit, d√©velopp√© avec Java et React.",
        project2Title: "Champlain Pet Clinic",
        project2Description: "Une application microservices multi-services construite avec Spring Boot, Scrum, gestion de versions et CI/CD.",
        project3Title: "Pirate Ship Defense - Unity",
        project3Description: "Un jeu de tower defense sur le th√®me des pirates inspir√© de Bloons TD, d√©velopp√© en Unity avec C#.",
        project4Title: "Resume Builder",
        project4Description: "Une application .NET qui permet aux utilisateurs de cr√©er et de personnaliser des CV, d√©velopp√©e en C#.",
        githubLink: "Voir sur GitHub",
        publicCommentsTitle: "Commentaires publics",
        nameColumn: "Nom",
        messageColumn: "Message",
        timestampColumn: "Horodatage",
        addCommentTitle: "Ajouter un commentaire",
        commentPlaceholder: "√âcrivez votre commentaire ici...",
        submitButton: "Soumettre",
        loginRequired: "Vous devez √™tre connect√© pour soumettre un commentaire.",
        commentUnderReview: "Votre commentaire est en attente de validation par l'administrateur et sera publi√© bient√¥t.",
        manageCommentsTitle: "G√©rer les commentaires",
        actionsColumn: "Actions",
        approveButton: "Approuver",
        deleteButton: "Supprimer",
        confirmDelete: "√ätes-vous s√ªr de vouloir supprimer ce commentaire ?",
        deleteSuccess: "‚úÖ Commentaire supprim√© avec succ√®s.",
        deleteError: "‚ùå √âchec de la suppression du commentaire.",
        approveSuccess: "‚úÖ Commentaire approuv√© avec succ√®s.",
        approveError: "‚ùå √âchec de l'approbation du commentaire.",
        redirectError: "Non autoris√©. Redirection vers la page d'accueil...",
        footerTitle: "Thomas Lemay",
        footerDescription: "√âtudiant en informatique au Coll√®ge Champlain Saint-Lambert",
        contact: "Contact",
        allRightsReserved: "¬© {year} Thomas Lemay. Tous droits r√©serv√©s.",
        languageSwitch: "Changer la langue",
        enterNameAndMessage: "Entrez un nom ainsi qu'un message s'il vous plait"
    },
};






// Define context type
interface LanguageContextType {
    language: "en" | "fr";
    toggleLanguage: () => void;
    t: (key: keyof TranslationKeys) => string;
}

// Create the context
const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

// Define provider props type
interface LanguageProviderProps {
    children: ReactNode;
}

// Language Provider Component
export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
    const [language, setLanguage] = useState<"en" | "fr">(
        (localStorage.getItem("lang") as "en" | "fr") || "en"
    );

    const toggleLanguage = () => {
        const newLang = language === "en" ? "fr" : "en";
        setLanguage(newLang);
        localStorage.setItem("lang", newLang);
    };

    // Translation function
    const t = (key: keyof TranslationKeys) => translations[language][key];

    return (
        <LanguageContext.Provider value={{ language, toggleLanguage, t }}>
            {children}
        </LanguageContext.Provider>
    );
};

// Custom hook for using the language context
export const useLanguage = (): LanguageContextType => {
    const context = useContext(LanguageContext);
    if (!context) {
        throw new Error("useLanguage must be used within a LanguageProvider");
    }
    return context;
};
